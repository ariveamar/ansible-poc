
- name: Harden SSH Configuration on Linux
  hosts: all
  become: yes
  ignore_errors: yes
  vars:
    sshd_config_path: /etc/ssh/sshd_config
    expected_ssh_port: 7806
    new_ssh_port: 7806
    sshd_config_path: /etc/ssh/sshd_config
    csv_path: /tmp
    csv_filename: report.csv
    headers: Hostname,SSH Port Before,SSH Port After

  tasks:
    - name: Check if root login is disabled in sshd_config
      ansible.builtin.command: "grep -Ei '^\\s*PermitRootLogin\\s+no' {{ sshd_config_path }}"
      register: root_login_check
      ignore_errors: yes

    - name: Check if SSH is listening on port {{ expected_ssh_port }}
      ansible.builtin.shell: |
        ss -tuln | grep ":{{ expected_ssh_port }} "
      register: ssh_port_check
      ignore_errors: yes

    - name: Display root login audit result
      ansible.builtin.debug:
        msg: >
          {% if root_login_check.rc == 0 %}
            ✅ Root login via SSH is disabled (PermitRootLogin no).
          {% else %}
            ❌ Root login via SSH is NOT disabled or setting not found.
          {% endif %}

    - name: Display SSH port audit result
      ansible.builtin.debug:
        msg: >
          {% if ssh_port_check.rc == 0 %}
            ✅ SSH is listening on port {{ expected_ssh_port }}.
          {% else %}
            ❌ SSH is NOT listening on port {{ expected_ssh_port }}.
          {% endif %}
  
    - name: Disable root login via SSH
      become: yes
      ansible.builtin.lineinfile:
        path: "{{ sshd_config_path }}"
        regexp: '^#?PermitRootLogin\s+'
        line: 'PermitRootLogin no'
        state: present
        backrefs: yes
        create: yes
    - name: Update SSH config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Port '
        line: 'Port {{ new_ssh_port }}'

#    - name: Allow new SSH port in firewall
#      firewalld:
#        port: "{{ new_ssh_port }}/tcp"
#        permanent: yes
#        state: enabled
#        notify: Reload Firewall
#      when: "'firewalld' in ansible_facts.services"

    - name: Update SELinux to allow new SSH port
      command: "semanage port -a -t ssh_port_t -p tcp {{ new_ssh_port }}"
      ignore_errors: yes  # In case SELinux isn't enforcing

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: change ssh port
      set_fact:
        ansible_port: "{{ new_ssh_port }}"

    - name: generate csv report file
      become: yes
      lineinfile:
        dest: "{{ csv_path }}/{{ csv_filename }}"
        line: "{{ headers }}"
        create: true
        state: present
      run_once: true

    - name: insert data to report
      lineinfile:
        dest: "{{ csv_path }}/{{ csv_filename }}"
        line: "{{ inventory_hostname }},22,{{ new_ssh_port }}"
        create: true
        state: present

    - name: Check if root login is disabled in sshd_config
      ansible.builtin.command: "grep -Ei '^\\s*PermitRootLogin\\s+no' {{ sshd_config_path }}"
      register: root_login_check
      ignore_errors: yes

    - name: Check if SSH is listening on port {{ expected_ssh_port }}
      ansible.builtin.shell: |
        ss -tuln | grep ":{{ expected_ssh_port }} "
      register: ssh_port_check
      ignore_errors: yes

    - name: Display root login audit result
      ansible.builtin.debug:
        msg: >
          {% if root_login_check.rc == 0 %}
            ✅ Root login via SSH is disabled (PermitRootLogin no).
          {% else %}
            ❌ Root login via SSH is NOT disabled or setting not found.
          {% endif %}

    - name: Display SSH port audit result
      ansible.builtin.debug:
        msg: >
          {% if ssh_port_check.rc == 0 %}
            ✅ SSH is listening on port {{ expected_ssh_port }}.
          {% else %}
            ❌ SSH is NOT listening on port {{ expected_ssh_port }}.
          {% endif %}
